{"version":3,"file":"index-92ad38be.js","sources":["../node_modules/@wowswapfork/contracts/lib/esm/reader.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@ethersproject/keccak256/lib.esm/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../node_modules/@ethersproject/strings/lib.esm/_version.js","../node_modules/@ethersproject/strings/lib.esm/utf8.js","../node_modules/@ethersproject/hash/lib.esm/id.js","../node_modules/@ethersproject/hash/lib.esm/_version.js","../node_modules/@ethersproject/address/lib.esm/index.js","../node_modules/@ethersproject/address/lib.esm/_version.js","../node_modules/@ethersproject/properties/lib.esm/_version.js","../node_modules/@ethersproject/properties/lib.esm/index.js","../node_modules/@ethersproject/hash/lib.esm/typed-data.js","../node_modules/@wowswapfork/contracts/lib/esm/signers.js","../node_modules/@wowswapfork/contracts/lib/esm/swap.js","../node_modules/@wowswapfork/contracts/lib/esm/index.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ethers } from \"ethers\";\nimport { normalizeInteractions } from \"./interaction\";\nimport { OrderBalance } from \"./order\";\nimport { InteractionStage } from \"./settlement\";\n/**\n * A generic method used to obfuscate the complexity of reading storage\n * of any StorageAccessible contract. That is, this method does the work of\n * 1. Encoding the function call on the reader\n * 2. Simulates delegatecall of storage read with encoded calldata\n * 3. Decodes the returned bytes from the storage read into expected return value.\n */\nfunction readStorage(base, reader, method, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const encodedCall = reader.interface.encodeFunctionData(method, parameters);\n        const resultBytes = yield base.callStatic.simulateDelegatecall(reader.address, encodedCall);\n        return reader.interface.decodeFunctionResult(method, resultBytes)[0];\n    });\n}\n/**\n * A class for attaching the storage reader contract to a solver allow list for\n * providing additional storage reading methods.\n */\nexport class AllowListReader {\n    constructor(allowList, reader) {\n        this.allowList = allowList;\n        this.reader = reader;\n    }\n    /**\n     * Returns true if all the specified addresses are allowed solvers.\n     */\n    areSolvers(solvers) {\n        return readStorage(this.allowList, this.reader, \"areSolvers\", [solvers]);\n    }\n}\n/**\n * A class for attaching the storage reader contract to the GPv2Settlement contract\n * for providing additional storage reading methods.\n */\nexport class SettlementReader {\n    constructor(settlement, reader) {\n        this.settlement = settlement;\n        this.reader = reader;\n    }\n    /**\n     * Read and return filled amounts for a list of orders\n     */\n    filledAmountsForOrders(orderUids) {\n        return readStorage(this.settlement, this.reader, \"filledAmountsForOrders\", [\n            orderUids,\n        ]);\n    }\n}\n/**\n * Trade simulation storage reader contract allowing the simulation of trades.\n */\nexport class TradeSimulator {\n    constructor(settlement, simulator) {\n        this.settlement = settlement;\n        this.simulator = simulator;\n    }\n    /**\n     * Simulates the single order settlement for an executed trade and a set of\n     * interactions.\n     */\n    simulateTrade(trade, interactions) {\n        var _a, _b, _c, _d, _e, _f;\n        const normalizedTrade = Object.assign(Object.assign({}, trade), { receiver: (_a = trade.receiver) !== null && _a !== void 0 ? _a : ethers.constants.AddressZero, sellTokenBalance: ethers.utils.id((_b = trade.sellTokenBalance) !== null && _b !== void 0 ? _b : OrderBalance.ERC20), buyTokenBalance: ethers.utils.id((_c = trade.buyTokenBalance) !== null && _c !== void 0 ? _c : OrderBalance.ERC20) });\n        const normalizedInteractions = [\n            normalizeInteractions((_d = interactions[InteractionStage.PRE]) !== null && _d !== void 0 ? _d : []),\n            normalizeInteractions((_e = interactions[InteractionStage.INTRA]) !== null && _e !== void 0 ? _e : []),\n            normalizeInteractions((_f = interactions[InteractionStage.POST]) !== null && _f !== void 0 ? _f : []),\n        ];\n        return readStorage(this.settlement, this.simulator, \"simulateTrade\", [\n            normalizedTrade,\n            normalizedInteractions,\n        ]);\n    }\n}\n//# sourceMappingURL=reader.js.map","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","export const version = \"bignumber/5.7.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"strings/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport function id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map","export const version = \"hash/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","export const version = \"address/5.7.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"properties/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { isJsonRpcProvider, } from \"./types/ethers\";\n/**\n * Wrapper around a TypedDataSigner Signer object that implements `_signTypedData`. It allows to specify the version of\n * EIP-712 used.\n *\n * Takes a Signer instance on creation.\n * All other Signer methods are proxied to initial instance.\n */\nexport class TypedDataVersionedSigner {\n    constructor(signer, version) {\n        this._isSigner = true;\n        this.signer = signer;\n        const versionSufix = version ? \"_\" + version : \"\";\n        this._signMethod = \"eth_signTypedData\" + versionSufix;\n        if (!signer.provider) {\n            throw new Error(\"Signer does not have a provider set\");\n        }\n        if (!isJsonRpcProvider(signer.provider)) {\n            throw new Error(\"Provider must be of type JsonRpcProvider\");\n        }\n        this.provider = signer.provider;\n    }\n    _signTypedData(domain, types, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, data, (name) => this.resolveName(name));\n            const payload = _TypedDataEncoder.getPayload(populated.domain, types, populated.value);\n            const msg = JSON.stringify(payload);\n            const address = yield this.getAddress();\n            // Actual signing\n            return this.provider.send(this._signMethod, [address.toLowerCase(), msg]);\n        });\n    }\n    // --- start boilerplate proxy methods ---\n    getAddress() {\n        return this.signer.getAddress();\n    }\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n    signTransaction(transaction) {\n        return this.signer.signTransaction(transaction);\n    }\n    connect(provider) {\n        return this.signer.connect(provider);\n    }\n    getBalance(blockTag) {\n        return this.signer.getBalance(blockTag);\n    }\n    getTransactionCount(blockTag) {\n        return this.signer.getTransactionCount(blockTag);\n    }\n    estimateGas(transaction) {\n        return this.signer.estimateGas(transaction);\n    }\n    call(transaction, blockTag) {\n        return this.signer.call(transaction, blockTag);\n    }\n    sendTransaction(transaction) {\n        return this.signer.sendTransaction(transaction);\n    }\n    getChainId() {\n        return this.signer.getChainId();\n    }\n    getGasPrice() {\n        return this.signer.getGasPrice();\n    }\n    getFeeData() {\n        return this.signer.getFeeData();\n    }\n    resolveName(name) {\n        return this.signer.resolveName(name);\n    }\n    checkTransaction(transaction) {\n        return this.signer.checkTransaction(transaction);\n    }\n    populateTransaction(transaction) {\n        return this.signer.populateTransaction(transaction);\n    }\n    _checkProvider(operation) {\n        return this.signer._checkProvider(operation);\n    }\n}\n/**\n * Wrapper around a TypedDataSigner Signer object that implements `_signTypedData` using\n * `eth_signTypedData_v3` instead of `eth_signTypedData_v4`.\n *\n * Takes a Signer instance on creation.\n * All other Signer methods are proxied to initial instance.\n */\nexport class TypedDataV3Signer extends TypedDataVersionedSigner {\n    constructor(signer) {\n        super(signer, \"v3\");\n    }\n}\n/**\n * Wrapper around a TypedDataSigner Signer object that implements `_signTypedData` using\n * `eth_signTypedData_v4` as usual.\n * The difference here is that the domain `chainId` is transformed to a `number`.\n * That's done to circumvent a bug introduced in the latest Metamask version (9.6.0)\n * that no longer accepts a string for domain `chainId`.\n * See for more details https://github.com/MetaMask/metamask-extension/issues/11308.\n *\n * Takes a Signer instance on creation.\n * All other Signer methods are proxied to initial instance.\n */\nexport class IntChainIdTypedDataV4Signer {\n    constructor(signer) {\n        this._isSigner = true;\n        this.signer = signer;\n        if (!signer.provider) {\n            throw new Error(\"Signer does not have a provider set\");\n        }\n        if (!isJsonRpcProvider(signer.provider)) {\n            throw new Error(\"Provider must be of type JsonRpcProvider\");\n        }\n        this.provider = signer.provider;\n    }\n    _signTypedData(domain, types, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, data, (name) => this.resolveName(name));\n            const payload = _TypedDataEncoder.getPayload(populated.domain, types, populated.value);\n            // Making `chainId` an int since Latest Metamask version (9.6.0) breaks otherwise\n            payload.domain.chainId = parseInt(payload.domain.chainId, 10);\n            const msg = JSON.stringify(payload);\n            const address = yield this.getAddress();\n            // Actual signing\n            return (yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                msg,\n            ]));\n        });\n    }\n    // --- start boilerplate proxy methods ---\n    getAddress() {\n        return this.signer.getAddress();\n    }\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n    signTransaction(transaction) {\n        return this.signer.signTransaction(transaction);\n    }\n    connect(provider) {\n        return this.signer.connect(provider);\n    }\n    getBalance(blockTag) {\n        return this.signer.getBalance(blockTag);\n    }\n    getTransactionCount(blockTag) {\n        return this.signer.getTransactionCount(blockTag);\n    }\n    estimateGas(transaction) {\n        return this.signer.estimateGas(transaction);\n    }\n    call(transaction, blockTag) {\n        return this.signer.call(transaction, blockTag);\n    }\n    sendTransaction(transaction) {\n        return this.signer.sendTransaction(transaction);\n    }\n    getChainId() {\n        return this.signer.getChainId();\n    }\n    getGasPrice() {\n        return this.signer.getGasPrice();\n    }\n    getFeeData() {\n        return this.signer.getFeeData();\n    }\n    resolveName(name) {\n        return this.signer.resolveName(name);\n    }\n    checkTransaction(transaction) {\n        return this.signer.checkTransaction(transaction);\n    }\n    populateTransaction(transaction) {\n        return this.signer.populateTransaction(transaction);\n    }\n    _checkProvider(operation) {\n        return this.signer._checkProvider(operation);\n    }\n}\n//# sourceMappingURL=signers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OrderKind } from \"./order\";\nimport { TokenRegistry, encodeTrade } from \"./settlement\";\nimport { signOrder } from \"./sign\";\n/**\n * Encodes a swap as a {@link BatchSwapStep} to be used with the settlement\n * contract.\n */\nexport function encodeSwapStep(tokens, swap) {\n    return {\n        poolId: swap.poolId,\n        assetInIndex: tokens.index(swap.assetIn),\n        assetOutIndex: tokens.index(swap.assetOut),\n        amount: swap.amount,\n        userData: swap.userData || \"0x\",\n    };\n}\n/**\n * A class for building calldata for a swap.\n *\n * The encoder ensures that token addresses are kept track of and performs\n * necessary computation in order to map each token addresses to IDs to\n * properly encode swap requests and the trade.\n */\nexport class SwapEncoder {\n    /**\n     * Creates a new settlement encoder instance.\n     *\n     * @param domain Domain used for signing orders. See {@link signOrder} for\n     * more details.\n     */\n    constructor(domain) {\n        this.domain = domain;\n        this._tokens = new TokenRegistry();\n        this._swaps = [];\n        this._trade = undefined;\n    }\n    /**\n     * Gets the array of token addresses used by the currently encoded swaps.\n     */\n    get tokens() {\n        // NOTE: Make sure to slice the original array, so it cannot be modified\n        // outside of this class.\n        return this._tokens.addresses;\n    }\n    /**\n     * Gets the encoded swaps.\n     */\n    get swaps() {\n        return this._swaps.slice();\n    }\n    /**\n     * Gets the encoded trade.\n     */\n    get trade() {\n        if (this._trade === undefined) {\n            throw new Error(\"trade not encoded\");\n        }\n        return this._trade;\n    }\n    /**\n     * Encodes the swap as a swap request and appends it to the swaps encoded so\n     * far.\n     *\n     * @param swap The Balancer swap to encode.\n     */\n    encodeSwapStep(...swaps) {\n        this._swaps.push(...swaps.map((swap) => encodeSwapStep(this._tokens, swap)));\n    }\n    /**\n     * Encodes a trade from a signed order.\n     *\n     * Additionally, if the order references new tokens that the encoder has not\n     * yet seen, they are added to the tokens array.\n     *\n     * @param order The order of the trade to encode.\n     * @param signature The signature for the order data.\n     */\n    encodeTrade(order, signature, swapExecution) {\n        const { limitAmount } = Object.assign({ limitAmount: order.kind == OrderKind.SELL ? order.buyAmount : order.sellAmount }, swapExecution);\n        this._trade = encodeTrade(this._tokens, order, signature, {\n            executedAmount: limitAmount,\n        });\n    }\n    /**\n     * Signs an order and encodes a trade with that order.\n     *\n     * @param order The order to sign for the trade.\n     * @param owner The externally owned account that should sign the order.\n     * @param scheme The signing scheme to use. See {@link SigningScheme} for more\n     * details.\n     */\n    signEncodeTrade(order, owner, scheme, swapExecution) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signature = yield signOrder(this.domain, order, owner, scheme);\n            this.encodeTrade(order, signature, swapExecution);\n        });\n    }\n    /**\n     * Returns the encoded swap parameters for the current state of the encoder.\n     *\n     * This method with raise an exception if a trade has not been encoded.\n     */\n    encodedSwap() {\n        return [this.swaps, this.tokens, this.trade];\n    }\n    /**\n     * Utility method for encoding a direct swap between an order and Balancer\n     * pools.\n     *\n     * This method functions identically to using a {@link SwapEncoder} and is\n     * provided as a short-cut.\n     */\n    static encodeSwap(...args) {\n        if (args.length < 5) {\n            const [swaps, order, signature, swapExecution] = args;\n            const encoder = new SwapEncoder({});\n            encoder.encodeSwapStep(...swaps);\n            encoder.encodeTrade(order, signature, swapExecution);\n            return encoder.encodedSwap();\n        }\n        else {\n            const [domain, swaps, order, owner, scheme, swapExecution] = args;\n            const encoder = new SwapEncoder(domain);\n            encoder.encodeSwapStep(...swaps);\n            return encoder\n                .signEncodeTrade(order, owner, scheme, swapExecution)\n                .then(() => encoder.encodedSwap());\n        }\n    }\n}\n//# sourceMappingURL=swap.js.map","/**\n * Return the Gnosis Protocol v2 domain used for signing.\n * @param chainId The EIP-155 chain ID.\n * @param verifyingContract The address of the contract that will verify the\n * signature.\n * @return An EIP-712 compatible typed domain data.\n */\nexport function domain(chainId, verifyingContract) {\n    return {\n        name: \"Gnosis Protocol\",\n        version: \"v2\",\n        chainId,\n        verifyingContract,\n    };\n}\nexport * from \"./api\";\nexport * from \"./deploy\";\nexport * from \"./interaction\";\nexport * from \"./order\";\nexport * from \"./proxy\";\nexport * from \"./reader\";\nexport * from \"./settlement\";\nexport * from \"./sign\";\nexport * from \"./signers\";\nexport * from \"./swap\";\nexport * from \"./vault\";\nexport * from \"./types/ethers\";\n//# sourceMappingURL=index.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","readStorage","base","reader","method","parameters","this","encodedCall","interface","encodeFunctionData","resultBytes","callStatic","simulateDelegatecall","address","decodeFunctionResult","AllowListReader","constructor","allowList","areSolvers","solvers","SettlementReader","settlement","filledAmountsForOrders","orderUids","TradeSimulator","simulator","simulateTrade","trade","interactions","_a","_b","_c","_d","_e","_f","normalizedTrade","Object","assign","receiver","ethers","constants","AddressZero","sellTokenBalance","utils","id","OrderBalance","ERC20","buyTokenBalance","normalizedInteractions","normalizeInteractions","InteractionStage","PRE","INTRA","POST","INPUT_ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","self","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","module","exports","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","Array","isArray","obj","prototype","toString","call","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","bits","padding","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","n","s","methods","createKmacOutputMethod","key","createOutputMethods","createMethod","i","length","type","create","algorithms","name","w","bytepad","Kmac","methodNames","algorithm","j","methodName","push","newMethodName","blocks","reset","finalized","block","start","blockCount","byteCount","outputBlocks","extraBytes","Error","notString","Uint8Array","code","index","charCodeAt","lastByteIndex","f","encode","x","right","o","bytes","unshift","encodeString","str","strs","zeros","finalize","hex","arrayBuffer","array","Uint32Array","slice","digest","offset","h","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","_permanentCensorErrors","_censorErrors","LogLevels","debug","default","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","enumerable","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","levels","DEBUG","INFO","warn","WARNING","makeError","params","errors","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","logger","isHexable","addSlice","arguments","isInteger","isBytes","v","arrayify","options","parseInt","allowMissingPrefix","substring","toHexString","isHexString","hexPad","match","HexCharacters","hexlify","Math","floor","hexConcat","items","item","hexZeroPad","keccak256","data","sha3","keccak_256","val","msg","inherits","ctor","superCtor","super_","TempCtor","BN","number","endian","isBN","negative","words","red","_init","Buffer","wordSize","require$$0","parseHex4Bits","string","c","parseHexByte","lowerBound","r","parseBase","end","mul","b","len","min","move","dest","src","num","max","left","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","groupSizes","groupBases","smallMulTo","out","a","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","_countBits","clz32","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","lo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","bl7","bh7","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","p","acc","modn","egcd","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","strip","input","output","outLen","prev","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","_hex","_isBigNumber","freeze","toBigNumber","toBN","from","other","throwFault","isNegative","shr","toBigInt","BigInt","toHex","anyValue","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","text","pair","toUtf8Bytes","ignore","OVERLONG","getChecksumAddress","chars","expanded","hashed","toUpperCase","ibanLookup","safeDigits","log10","LN10","getAddress","map","checksum","ibanChecksum","defineReadOnly","object","shallowCopy","opaque","bigint","boolean","function","_isFrozen","isFrozen","_deepCopy","deepCopy","fill","NegativeOne","Zero","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","signed","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","fields","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","filter","checkCircular","found","child","subtype","primaryType","st","sort","_types","getEncoder","encoder","_encoderCache","_getEncoder","subEncoder","encodedType","values","encodeData","hashStruct","hash","_visit","callback","reduce","accum","visit","domain","domainFields","indexOf","EIP712Domain","hashDomain","resolveName","ensCache","domainValues","domainTypes","typesWithDomain","TypedDataVersionedSigner","signer","_isSigner","_signMethod","provider","isJsonRpcProvider","_signTypedData","populated","_TypedDataEncoder","resolveNames","payload","getPayload","send","signMessage","signTransaction","transaction","connect","getBalance","blockTag","getTransactionCount","estimateGas","sendTransaction","getChainId","getGasPrice","getFeeData","checkTransaction","populateTransaction","_checkProvider","TypedDataV3Signer","super","IntChainIdTypedDataV4Signer","encodeSwapStep","tokens","swap","poolId","assetInIndex","assetIn","assetOutIndex","assetOut","amount","userData","SwapEncoder","_tokens","TokenRegistry","_swaps","_trade","addresses","swaps","encodeTrade","order","signature","swapExecution","limitAmount","OrderKind","SELL","buyAmount","sellAmount","executedAmount","signEncodeTrade","owner","scheme","signOrder","encodedSwap"],"mappings":"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"}